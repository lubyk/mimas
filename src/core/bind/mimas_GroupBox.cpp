/**
 *
 * MACHINE GENERATED FILE. DO NOT EDIT.
 *
 * Bindings for class GroupBox
 *
 * This file has been generated by dub 2.1.~.
 */
#include "dub/dub.h"
#include "mimas/GroupBox.h"


/** Cast (class_name)
 * 
 */
static int GroupBox__cast_(lua_State *L) {

  GroupBox *self = *((GroupBox **)dub_checksdata_n(L, 1, "mimas.GroupBox"));
  const char *key = luaL_checkstring(L, 2);
  void **retval__ = (void**)lua_newuserdata(L, sizeof(void*));
  return 0;
}

/** GroupBox::GroupBox(const char *title=NULL, QWidget *parent=NULL)
 * include/mimas/GroupBox.h:49
 */
static int GroupBox_GroupBox(lua_State *L) {
  try {
    int top__ = lua_gettop(L);
    if (top__ >= 2) {
      const char *title = dub_checkstring(L, 1);
      QWidget *parent = *((QWidget **)dub_checksdata(L, 2, "mimas.QWidget"));
      GroupBox *retval__ = new GroupBox(title, parent);
      retval__->pushobject(L, retval__, "mimas.GroupBox", true);
      return 1;
    } else if (top__ >= 1) {
      const char *title = dub_checkstring(L, 1);
      GroupBox *retval__ = new GroupBox(title);
      retval__->pushobject(L, retval__, "mimas.GroupBox", true);
      return 1;
    } else {
      GroupBox *retval__ = new GroupBox();
      retval__->pushobject(L, retval__, "mimas.GroupBox", true);
      return 1;
    }
  } catch (std::exception &e) {
    lua_pushfstring(L, "GroupBox: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "GroupBox: Unknown exception");
  }
  return dub_error(L);
}

/** GroupBox::~GroupBox()
 * include/mimas/GroupBox.h:52
 */
static int GroupBox__GroupBox(lua_State *L) {
  try {
    DubUserdata *userdata = ((DubUserdata*)dub_checksdata_d(L, 1, "mimas.GroupBox"));
    if (userdata->gc) {
      GroupBox *self = (GroupBox *)userdata->ptr;
      delete self;
    }
    userdata->gc = false;
    return 0;
  } catch (std::exception &e) {
    lua_pushfstring(L, "~GroupBox: %s", e.what());
  } catch (...) {
    lua_pushfstring(L, "~GroupBox: Unknown exception");
  }
  return dub_error(L);
}



// --=============================================== __tostring
static int GroupBox___tostring(lua_State *L) {
  GroupBox *self = *((GroupBox **)dub_checksdata_n(L, 1, "mimas.GroupBox"));
  lua_pushfstring(L, "mimas.GroupBox: %p", self);
  
  return 1;
}

// --=============================================== METHODS

static const struct luaL_Reg GroupBox_member_methods[] = {
  { "_cast_"       , GroupBox__cast_      },
  { "new"          , GroupBox_GroupBox    },
  { "__gc"         , GroupBox__GroupBox   },
  { "__tostring"   , GroupBox___tostring  },
  { NULL, NULL},
};


extern "C" int luaopen_mimas_GroupBox(lua_State *L)
{
  // Create the metatable which will contain all the member methods
  luaL_newmetatable(L, "mimas.GroupBox");
  // <mt>

  // register member methods
  luaL_register(L, NULL, GroupBox_member_methods);
  // save meta-table in mimas
  dub_register(L, "mimas", "GroupBox_core");
  // <mt>
  lua_pop(L, 1);
  return 0;
}
